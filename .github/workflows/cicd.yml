name: ü§ñ CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-java:
    name: üèãÔ∏è Maven / Build and run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Run maven
        run: |
          # Load .env.example variables to environment
          export $(grep -v '^#' .env.example | grep -v '^\W$')
          cd backend
          mvn verify --batch-mode --update-snapshots

  build-and-test-angular:
    name: üì¶ NPM / Build, lint and run tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    permissions:
      contents: 'read'
      actions: 'read'
      pull-requests: 'read'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - name: üì¶ Install packages
        run: npm ci
      - name: üìÑ Check formatting
        run: npx nx format:check
      # - name: üìÑ Lint
      #   run: npx nx affected -t lint --parallel=3
      # - name: ‚ö° Test
      #   run: npx nx affected -t test --parallel=3 --configuration=ci
      # - name: ‚öôÔ∏è Build
      #   run: npx nx affected -t build --parallel=3

  build-and-push-backend-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: üì¶ Build and push backend container image to registry
    runs-on: ubuntu-latest
    needs: [build-and-test-java]

    permissions:
      contents: 'read'
      packages: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase the repo name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}/backend" >>${GITHUB_ENV}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-frontend-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: üì¶ Build and push frontend container image to registry
    runs-on: ubuntu-latest
    needs: [build-and-test-angular]

    permissions:
      contents: 'read'
      packages: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase the repo name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}/frontend" >>${GITHUB_ENV}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run-terraform:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: üèóÔ∏è Terraform / Plan and apply
    runs-on: ubuntu-latest
    environment: production
    needs: [build-and-push-backend-image, build-and-push-frontend-image]

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="github_pat=${{ secrets.PAT }}"

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -var="github_pat=${{ secrets.PAT }}" -auto-approve