name: manual custom backend image creation

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: 'Custom tag name'
        required: true
        default: 'custom'
        type: string

jobs:
  build-and-test-java:
    name: 🏋️ Maven / Build and run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Run maven
        run: |
          # Load .env.example variables to environment
          export $(grep -v '^#' .env.example | grep -v '^\W$')
          cd backend
          mvn verify --batch-mode --update-snapshots

  build-and-push-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: 📦 Build and push container image to registry
    runs-on: ubuntu-latest
    needs: [ build-and-test-java ]

    permissions:
      contents: 'read'
      packages: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase the repo name
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=${{ inputs.tagName }},enable={{is_default_branch}}
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}